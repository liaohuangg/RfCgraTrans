let SessionLoad = 1
if &cp | set nocp | endif
let s:cpo_save=&cpo
set cpo&vim
imap <D-BS> 
imap <M-BS> 
imap <M-Down> }
inoremap <D-Down> <C-End>
imap <M-Up> {
inoremap <D-Up> <C-Home>
noremap! <M-Right> <C-Right>
noremap! <D-Right> <End>
noremap! <M-Left> <C-Left>
noremap! <D-Left> <Home>
imap <S-Tab> 
inoremap <C-Tab> 	
map! <D-v> *
vmap / y/"
nmap <silent> \bundo <Plug>BufKillBundo
nmap <silent> \!bw <Plug>BufKillBwBang
nmap <silent> \bw <Plug>BufKillBw
nmap <silent> \!bd <Plug>BufKillBdBang
nmap <silent> \bd <Plug>BufKillBd
nmap <silent> \!bun <Plug>BufKillBunBang
nmap <silent> \bun <Plug>BufKillBun
nmap gx <Plug>NetrwBrowseX
map <M-Down> }
noremap <D-Down> <C-End>
map <M-Up> {
noremap <D-Up> <C-Home>
noremap <M-Right> <C-Right>
noremap <D-Right> <End>
noremap <M-Left> <C-Left>
noremap <D-Left> <Home>
nnoremap <silent> <Plug>NetrwBrowseX :call netrw#NetrwBrowseX(expand("<cWORD>"),0)
vmap <BS> "-d
vmap <D-x> "*d
vmap <D-c> "*y
vmap <D-v> "-d"*P
nmap <D-v> "*P
imap 	 
imap  =CtrlXPP()
iabbr xdate =strftime("%d/%m/%y %H:%M:%S")
iabbr xasp <%@language=jscript%><%	<BS>%><<O	
let &cpo=s:cpo_save
unlet s:cpo_save
set autoindent
set background=dark
set backspace=2
set backup
set backupdir=~/.vim/vimfiles/backup
set cindent
set clipboard=unnamed
set confirm
set directory=~/.vim/vimfiles/temp
set expandtab
set fileencodings=ucs-bom,utf-8,default,latin1
set fileformats=unix,mac,dos
set fillchars=vert:\ ,stl:\ ,stlnc:\\
set foldopen=block,hor,mark,percent,quickfix,tag
set formatoptions=tcrqn
set guifont=DejaVu\ Sans\ Mono\ 9
set guitablabel=%M%t
set hidden
set history=1000
set ignorecase
set incsearch
set iskeyword=@,48-57,_,192-255,_,$,@,%,#,-
set langmenu=none
set lazyredraw
set listchars=tab:|\ ,trail:.,extends:>,precedes:<,eol:$
set mouse=a
set printexpr=system('open\ -a\ Preview\ '.v:fname_in)\ +\ v:shell_error
set report=0
set ruler
set rulerformat=%15.15f\ %4.4l,%-2.2v\ %2.2p%%
set scrolloff=10
set shiftwidth=2
set shortmess=atI
set showmatch
set smartindent
set smarttab
set tags=/home/bastoul/work/pca/rstream/CTAGS
set termencoding=utf-8
set title
set viminfo='50,\"250,!
set whichwrap=b,s,<,>,h,l
set wildmenu
set window=59
let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0
let v:this_session=expand("<sfile>:p")
silent only
cd ~/Documents/svn/git/clan/source
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
set shortmess=aoO
badd +73 clan.c
badd +107 matrix.c
badd +1 options.c
badd +1 parser.y
badd +1 scanner.l
badd +125 scop.c
badd +54 statement.c
badd +1 symbol.c
badd +1 vector.c
badd +39 ~/Documents/svn/git/clan/include/clan/clan.h.in
badd +38 ~/Documents/svn/git/clan/include/clan/macros.h
badd +48 ~/Documents/svn/git/clan/include/clan/matrix.h
badd +1 ~/Documents/svn/git/clan/include/clan/options.h
badd +37 ~/Documents/svn/git/clan/include/clan/scop.h
badd +37 ~/Documents/svn/git/clan/include/clan/statement.h
badd +59 ~/Documents/svn/git/clan/include/clan/symbol.h
badd +0 ~/Documents/svn/git/clan/include/clan/vector.h
args clan.c
edit ~/Documents/svn/git/clan/include/clan/vector.h
set splitbelow splitright
set nosplitbelow
set nosplitright
wincmd t
set winheight=1 winwidth=1
argglobal
setlocal keymap=
setlocal noarabic
setlocal autoindent
setlocal balloonexpr=
setlocal nobinary
setlocal bufhidden=
setlocal buflisted
setlocal buftype=
setlocal cindent
setlocal cinkeys=0{,0},0),:,0#,!^F,o,O,e
setlocal cinoptions=
setlocal cinwords=if,else,while,do,for,switch
setlocal colorcolumn=
setlocal comments=sO:*\ -,mO:*\ \ ,exO:*/,s1:/*,mb:*,ex:*/,://
setlocal commentstring=/*%s*/
setlocal complete=.,w,b,u,t,i
setlocal concealcursor=
setlocal conceallevel=0
setlocal completefunc=
setlocal nocopyindent
setlocal cryptmethod=
setlocal nocursorbind
setlocal nocursorcolumn
setlocal nocursorline
setlocal define=
setlocal dictionary=
setlocal nodiff
setlocal equalprg=
setlocal errorformat=
setlocal expandtab
if &filetype != 'cpp'
setlocal filetype=cpp
endif
setlocal foldcolumn=0
setlocal foldenable
setlocal foldexpr=0
setlocal foldignore=#
set foldlevel=100
setlocal foldlevel=100
setlocal foldmarker={{{,}}}
set foldmethod=indent
setlocal foldmethod=indent
setlocal foldminlines=1
setlocal foldnestmax=20
setlocal foldtext=foldtext()
setlocal formatexpr=
setlocal formatoptions=ncroql
setlocal formatlistpat=^\\s*\\d\\+[\\]:.)}\\t\ ]\\s*
setlocal grepprg=
setlocal iminsert=2
setlocal imsearch=2
setlocal include=
setlocal includeexpr=
setlocal indentexpr=
setlocal indentkeys=0{,0},:,0#,!^F,o,O,e
setlocal noinfercase
setlocal iskeyword=@,48-57,_,192-255,_,$,@,%,#,-
setlocal keywordprg=
setlocal nolinebreak
setlocal nolisp
setlocal nolist
setlocal nomacmeta
setlocal makeprg=
setlocal matchpairs=(:),{:},[:]
setlocal modeline
setlocal modifiable
setlocal nrformats=octal,hex
set number
setlocal number
setlocal numberwidth=4
setlocal omnifunc=ccomplete#Complete
setlocal path=
setlocal nopreserveindent
setlocal nopreviewwindow
setlocal quoteescape=\\
setlocal noreadonly
setlocal norelativenumber
setlocal norightleft
setlocal rightleftcmd=search
setlocal noscrollbind
setlocal shiftwidth=2
setlocal noshortname
setlocal smartindent
setlocal softtabstop=0
setlocal nospell
setlocal spellcapcheck=
setlocal spellfile=
setlocal spelllang=en
setlocal statusline=
setlocal suffixesadd=
setlocal swapfile
setlocal synmaxcol=3000
if &syntax != 'cpp'
setlocal syntax=cpp
endif
setlocal tabstop=8
setlocal tags=
setlocal textwidth=0
setlocal thesaurus=
setlocal noundofile
setlocal nowinfixheight
setlocal nowinfixwidth
set nowrap
setlocal nowrap
setlocal wrapmargin=0
let s:l = 11 - ((10 * winheight(0) + 29) / 59)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
11
normal! 040l
lcd ~/Documents/svn/git/clan/include/clan
tabnext 1
if exists('s:wipebuf')
  silent exe 'bwipe ' . s:wipebuf
endif
unlet! s:wipebuf
set winheight=1 winwidth=20 shortmess=atI
let s:sx = expand("<sfile>:p:r")."x.vim"
if file_readable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &so = s:so_save | let &siso = s:siso_save
doautoall SessionLoadPost
unlet SessionLoad
" vim: set ft=vim :
